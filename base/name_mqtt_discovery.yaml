name: ${devicename}
on_boot:
  priority: -80
  then:
    - delay: 2s
    - logger.log:
        format: "Sending MQTT Discovery Message"
        tag: "esphome"
    - mqtt.publish_json:
        topic: "homeassistant/cover/${devicename}/cover/config"
        retain: True
        payload: |-
          root["name"] = "";
          root["state_topic"] = "${devicename}/cover/${cover_name}/state";
          root["availability_topic"] = "${devicename}/status";
          root["unique_id"] = "ESPcover${devicename}_cover";
          root["tilt_status_topic"] = "${devicename}/cover/${cover_name}/tilt/state";
          root["tilt_command_topic"] = "${devicename}/cover/${cover_name}/tilt/command";
          root["tilt_closed_value"] = ${tilt_closed_value};
          root["tilt_opened_value"] = ${tilt_opened_value};
          root["tilt_min"] = ${tilt_min};
          root["tilt_max"] = ${tilt_max};
          root["device_class"] = "${device_class}";
          JsonObject device = root.createNestedObject("device");
          device["identifiers"] = get_mac_address();
          device["name"] = "${devicename}";
          device["sw_version"] = "esphome v" ESPHOME_VERSION " " + App.get_compilation_time();
          device["model"] = ARDUINO_BOARD;
          device["manufacturer"] = "espressif";
    - lambda: id(${devicename}_wifi_info_ip).publish_state(WiFi.localIP().toString().c_str());

